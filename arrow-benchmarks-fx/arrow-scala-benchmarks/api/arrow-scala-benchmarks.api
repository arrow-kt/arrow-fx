public final class arrow/benchmarks/effects/scala/cats/Async {
	public static fun cs ()Lcats/effect/ContextShift;
	public static fun ioAsyncLoop (II)Lcats/effect/IO;
	public static fun unsafeIOAsyncLoop (II)I
}

public final class arrow/benchmarks/effects/scala/cats/Async$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/Async$;
	public static fun <clinit> ()V
	public fun cs ()Lcats/effect/ContextShift;
	public fun ioAsyncLoop (II)Lcats/effect/IO;
	public fun unsafeIOAsyncLoop (II)I
}

public final class arrow/benchmarks/effects/scala/cats/AttemptNonRaised {
	public static fun ioLoopHappy (II)Lcats/effect/IO;
}

public final class arrow/benchmarks/effects/scala/cats/AttemptNonRaised$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/AttemptNonRaised$;
	public static final synthetic fun $anonfun$ioLoopHappy$1 (I)I
	public static final synthetic fun $anonfun$ioLoopHappy$2 (ILscala/util/Either;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioLoopHappy$3 (Ljava/lang/Throwable;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioLoopHappy$4 (II)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioLoopHappy$4$adapted (ILjava/lang/Object;)Lcats/effect/IO;
	public static fun <clinit> ()V
	public fun ioLoopHappy (II)Lcats/effect/IO;
}

public final class arrow/benchmarks/effects/scala/cats/AttemptRaisedError {
	public static fun ioLoopNotHappy (II)Lcats/effect/IO;
}

public final class arrow/benchmarks/effects/scala/cats/AttemptRaisedError$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/AttemptRaisedError$;
	public static final synthetic fun $anonfun$ioLoopNotHappy$1 ()Lscala/runtime/Nothing$;
	public static final synthetic fun $anonfun$ioLoopNotHappy$2 (IILscala/util/Either;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioLoopNotHappy$3 (IILjava/lang/Throwable;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioLoopNotHappy$4 (Lscala/runtime/Nothing$;)Lcats/effect/IO;
	public static fun <clinit> ()V
	public fun ioLoopNotHappy (II)Lcats/effect/IO;
}

public final class arrow/benchmarks/effects/scala/cats/DeepBind {
	public static fun fib (I)Lcats/effect/IO;
}

public final class arrow/benchmarks/effects/scala/cats/DeepBind$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/DeepBind$;
	public static final synthetic fun $anonfun$fib$1 (I)Lscala/math/BigInt;
	public static final synthetic fun $anonfun$fib$2 (ILscala/math/BigInt;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$fib$3 (Lscala/math/BigInt;Lscala/math/BigInt;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$fib$4 (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
	public static fun <clinit> ()V
	public fun fib (I)Lcats/effect/IO;
}

public final class arrow/benchmarks/effects/scala/cats/Delay {
	public static fun ioDelayLoop (II)Lcats/effect/IO;
	public static fun unsafeIODelayLoop (II)I
}

public final class arrow/benchmarks/effects/scala/cats/Delay$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/Delay$;
	public static final synthetic fun $anonfun$ioDelayLoop$1 (I)I
	public static final synthetic fun $anonfun$ioDelayLoop$2 (II)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioDelayLoop$2$adapted (ILjava/lang/Object;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioDelayLoop$3 (I)I
	public static fun <clinit> ()V
	public fun ioDelayLoop (II)Lcats/effect/IO;
	public fun unsafeIODelayLoop (II)I
}

public final class arrow/benchmarks/effects/scala/cats/LeftBind {
	public static fun loop (III)Lcats/effect/IO;
	public static fun unsafeIOLeftBindLoop (III)I
}

public final class arrow/benchmarks/effects/scala/cats/LeftBind$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/LeftBind$;
	public static final synthetic fun $anonfun$loop$1 (I)I
	public static final synthetic fun $anonfun$loop$2 (III)Lcats/effect/IO;
	public static final synthetic fun $anonfun$loop$2$adapted (IILjava/lang/Object;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$loop$3 (I)Lcats/effect/IO;
	public static final synthetic fun $anonfun$loop$3$adapted (Ljava/lang/Object;)Lcats/effect/IO;
	public static final synthetic fun $anonfun$loop$4 (I)I
	public static final synthetic fun $anonfun$loop$5 (I)I
	public static final synthetic fun $anonfun$unsafeIOLeftBindLoop$1 ()I
	public static final synthetic fun $anonfun$unsafeIOLeftBindLoop$2 (III)Lcats/effect/IO;
	public static final synthetic fun $anonfun$unsafeIOLeftBindLoop$2$adapted (IILjava/lang/Object;)Lcats/effect/IO;
	public static fun <clinit> ()V
	public fun loop (III)Lcats/effect/IO;
	public fun unsafeIOLeftBindLoop (III)I
}

public final class arrow/benchmarks/effects/scala/cats/Map {
	public static fun catsIOMapTest (II)J
}

public final class arrow/benchmarks/effects/scala/cats/Map$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/Map$;
	public static final synthetic fun $anonfun$catsIOMapTest$1 (I)I
	public static fun <clinit> ()V
	public fun catsIOMapTest (II)J
}

public final class arrow/benchmarks/effects/scala/cats/MapStream {
	public static fun addOne ()Lscala/Function1;
	public static fun mapStream (Lscala/Function1;Lscala/Option;)Lscala/Option;
	public static fun range (II)Lscala/Option;
	public static fun sum (JLscala/Option;)Lcats/effect/IO;
	public static fun test (II)J
}

public final class arrow/benchmarks/effects/scala/cats/MapStream$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/MapStream$;
	public static final synthetic fun $anonfun$addOne$1 (I)I
	public static final synthetic fun $anonfun$mapStream$1 (Lscala/Function1;Lscala/Option;)Lscala/Option;
	public static final synthetic fun $anonfun$range$1 (II)Lscala/Option;
	public static final synthetic fun $anonfun$sum$1 (JLscala/Option;)Lcats/effect/IO;
	public static fun <clinit> ()V
	public fun addOne ()Lscala/Function1;
	public fun mapStream (Lscala/Function1;Lscala/Option;)Lscala/Option;
	public fun range (II)Lscala/Option;
	public fun sum (JLscala/Option;)Lcats/effect/IO;
	public fun test (II)J
}

public final class arrow/benchmarks/effects/scala/cats/MapStream$Stream : java/io/Serializable, scala/Product {
	public fun <init> (ILcats/effect/IO;)V
	public fun canEqual (Ljava/lang/Object;)Z
	public fun copy (ILcats/effect/IO;)Larrow/benchmarks/effects/scala/cats/MapStream$Stream;
	public fun copy$default$1 ()I
	public fun copy$default$2 ()Lcats/effect/IO;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun next ()Lcats/effect/IO;
	public fun productArity ()I
	public fun productElement (I)Ljava/lang/Object;
	public fun productElementName (I)Ljava/lang/String;
	public fun productElementNames ()Lscala/collection/Iterator;
	public fun productIterator ()Lscala/collection/Iterator;
	public fun productPrefix ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun value ()I
}

public class arrow/benchmarks/effects/scala/cats/MapStream$Stream$ : scala/runtime/AbstractFunction2, java/io/Serializable {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/MapStream$Stream$;
	public static fun <clinit> ()V
	public fun <init> ()V
	public fun apply (ILcats/effect/IO;)Larrow/benchmarks/effects/scala/cats/MapStream$Stream;
	public synthetic fun apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun toString ()Ljava/lang/String;
	public fun unapply (Larrow/benchmarks/effects/scala/cats/MapStream$Stream;)Lscala/Option;
}

public final class arrow/benchmarks/effects/scala/cats/Pure {
	public static fun ioPureLoop (II)Lcats/effect/IO;
	public static fun unsafeIOPureLoop (II)I
}

public final class arrow/benchmarks/effects/scala/cats/Pure$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/Pure$;
	public static final synthetic fun $anonfun$ioPureLoop$1 (II)Lcats/effect/IO;
	public static final synthetic fun $anonfun$ioPureLoop$1$adapted (ILjava/lang/Object;)Lcats/effect/IO;
	public static fun <clinit> ()V
	public fun ioPureLoop (II)Lcats/effect/IO;
	public fun unsafeIOPureLoop (II)I
}

public final class arrow/benchmarks/effects/scala/cats/dummy {
	public static fun addSuppressed (Ljava/lang/Throwable;)V
	public static fun fillInStackTrace ()Ljava/lang/Throwable;
	public static fun getCause ()Ljava/lang/Throwable;
	public static fun getLocalizedMessage ()Ljava/lang/String;
	public static fun getMessage ()Ljava/lang/String;
	public static fun getStackTrace ()[Ljava/lang/StackTraceElement;
	public static fun getSuppressed ()[Ljava/lang/Throwable;
	public static fun initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;
	public static fun printStackTrace ()V
	public static fun printStackTrace (Ljava/io/PrintStream;)V
	public static fun printStackTrace (Ljava/io/PrintWriter;)V
	public static fun setStackTrace ([Ljava/lang/StackTraceElement;)V
	public static fun toString ()Ljava/lang/String;
}

public final class arrow/benchmarks/effects/scala/cats/dummy$ : java/lang/RuntimeException {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/cats/dummy$;
	public static fun <clinit> ()V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
}

public final class arrow/benchmarks/effects/scala/zio/Async {
	public static fun executor ()Lzio/internal/Executor;
	public static fun ioAsyncLoop (II)Lzio/ZIO;
	public static fun unsafeIOAsyncLoop (II)I
}

public final class arrow/benchmarks/effects/scala/zio/Async$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/Async$;
	public static final synthetic fun $anonfun$unsafeIOAsyncLoop$1 (II)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun executor ()Lzio/internal/Executor;
	public fun ioAsyncLoop (II)Lzio/ZIO;
	public fun unsafeIOAsyncLoop (II)I
}

public final class arrow/benchmarks/effects/scala/zio/AttemptNonRaised {
	public static fun ioLoopHappy (II)Lzio/ZIO;
	public static fun run (I)I
}

public final class arrow/benchmarks/effects/scala/zio/AttemptNonRaised$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/AttemptNonRaised$;
	public static final synthetic fun $anonfun$ioLoopHappy$1 (I)I
	public static final synthetic fun $anonfun$ioLoopHappy$2 (ILscala/util/Either;)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioLoopHappy$3 (Ljava/lang/Throwable;)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioLoopHappy$4 (II)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioLoopHappy$4$adapted (ILjava/lang/Object;)Lzio/ZIO;
	public static final synthetic fun $anonfun$run$1 (I)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun ioLoopHappy (II)Lzio/ZIO;
	public fun run (I)I
}

public final class arrow/benchmarks/effects/scala/zio/AttemptRaisedError {
	public static fun ioLoopNotHappy (II)Lzio/ZIO;
	public static fun run (I)I
}

public final class arrow/benchmarks/effects/scala/zio/AttemptRaisedError$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/AttemptRaisedError$;
	public static final synthetic fun $anonfun$ioLoopNotHappy$1 ()Lscala/runtime/Nothing$;
	public static final synthetic fun $anonfun$ioLoopNotHappy$2 (IILscala/util/Either;)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioLoopNotHappy$3 (IILjava/lang/Throwable;)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioLoopNotHappy$4 (Lscala/runtime/Nothing$;)Lzio/ZIO;
	public static final synthetic fun $anonfun$run$1 (I)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun ioLoopNotHappy (II)Lzio/ZIO;
	public fun run (I)I
}

public final class arrow/benchmarks/effects/scala/zio/DeepBind {
	public static fun fib (I)Lscala/math/BigInt;
	public static fun loop (I)Lzio/ZIO;
}

public final class arrow/benchmarks/effects/scala/zio/DeepBind$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/DeepBind$;
	public static final synthetic fun $anonfun$fib$1 (I)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$1 (I)Lscala/math/BigInt;
	public static final synthetic fun $anonfun$loop$2 (ILscala/math/BigInt;)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$3 (Lscala/math/BigInt;Lscala/math/BigInt;)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$4 (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
	public static fun <clinit> ()V
	public fun fib (I)Lscala/math/BigInt;
	public fun loop (I)Lzio/ZIO;
}

public final class arrow/benchmarks/effects/scala/zio/Delay {
	public static fun ioDelayLoop (II)Lzio/ZIO;
	public static fun unsafeIODelayLoop (II)I
}

public final class arrow/benchmarks/effects/scala/zio/Delay$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/Delay$;
	public static final synthetic fun $anonfun$ioDelayLoop$1 (I)I
	public static final synthetic fun $anonfun$ioDelayLoop$2 (II)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioDelayLoop$2$adapted (ILjava/lang/Object;)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioDelayLoop$3 (I)I
	public static final synthetic fun $anonfun$unsafeIODelayLoop$1 (II)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun ioDelayLoop (II)Lzio/ZIO;
	public fun unsafeIODelayLoop (II)I
}

public final class arrow/benchmarks/effects/scala/zio/LeftBind {
	public static fun loop (III)Lzio/ZIO;
	public static fun unsafeIOLeftBindLoop (III)I
}

public final class arrow/benchmarks/effects/scala/zio/LeftBind$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/LeftBind$;
	public static final synthetic fun $anonfun$loop$1 (I)I
	public static final synthetic fun $anonfun$loop$2 (III)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$2$adapted (IILjava/lang/Object;)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$3 (I)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$3$adapted (Ljava/lang/Object;)Lzio/ZIO;
	public static final synthetic fun $anonfun$loop$4 (I)I
	public static final synthetic fun $anonfun$loop$5 (I)I
	public static final synthetic fun $anonfun$unsafeIOLeftBindLoop$1 (III)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun loop (III)Lzio/ZIO;
	public fun unsafeIOLeftBindLoop (III)I
}

public final class arrow/benchmarks/effects/scala/zio/Map {
	public static fun zioMapTest (II)J
}

public final class arrow/benchmarks/effects/scala/zio/Map$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/Map$;
	public static final synthetic fun $anonfun$zioMapTest$1 (I)I
	public static final synthetic fun $anonfun$zioMapTest$2 (Lscala/runtime/ObjectRef;)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun zioMapTest (II)J
}

public final class arrow/benchmarks/effects/scala/zio/MapStream {
	public static fun addOne ()Lscala/Function1;
	public static fun mapStream (Lscala/Function1;Lscala/Option;)Lscala/Option;
	public static fun range (II)Lscala/Option;
	public static fun sum (JLscala/Option;)Lzio/ZIO;
	public static fun test (II)J
}

public final class arrow/benchmarks/effects/scala/zio/MapStream$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/MapStream$;
	public static final synthetic fun $anonfun$addOne$1 (I)I
	public static final synthetic fun $anonfun$mapStream$1 (Lscala/Function1;Lscala/Option;)Lscala/Option;
	public static final synthetic fun $anonfun$range$1 (II)Lscala/Option;
	public static final synthetic fun $anonfun$sum$1 (JLscala/Option;)Lzio/ZIO;
	public static final synthetic fun $anonfun$test$1 (Lscala/runtime/ObjectRef;)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun addOne ()Lscala/Function1;
	public fun mapStream (Lscala/Function1;Lscala/Option;)Lscala/Option;
	public fun range (II)Lscala/Option;
	public fun sum (JLscala/Option;)Lzio/ZIO;
	public fun test (II)J
}

public final class arrow/benchmarks/effects/scala/zio/MapStream$Stream : java/io/Serializable, scala/Product {
	public fun <init> (ILzio/ZIO;)V
	public fun canEqual (Ljava/lang/Object;)Z
	public fun copy (ILzio/ZIO;)Larrow/benchmarks/effects/scala/zio/MapStream$Stream;
	public fun copy$default$1 ()I
	public fun copy$default$2 ()Lzio/ZIO;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun next ()Lzio/ZIO;
	public fun productArity ()I
	public fun productElement (I)Ljava/lang/Object;
	public fun productElementName (I)Ljava/lang/String;
	public fun productElementNames ()Lscala/collection/Iterator;
	public fun productIterator ()Lscala/collection/Iterator;
	public fun productPrefix ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun value ()I
}

public class arrow/benchmarks/effects/scala/zio/MapStream$Stream$ : scala/runtime/AbstractFunction2, java/io/Serializable {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/MapStream$Stream$;
	public static fun <clinit> ()V
	public fun <init> ()V
	public fun apply (ILzio/ZIO;)Larrow/benchmarks/effects/scala/zio/MapStream$Stream;
	public synthetic fun apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun toString ()Ljava/lang/String;
	public fun unapply (Larrow/benchmarks/effects/scala/zio/MapStream$Stream;)Lscala/Option;
}

public final class arrow/benchmarks/effects/scala/zio/Pure {
	public static fun ioPureLoop (II)Lzio/ZIO;
	public static fun unsafeIOPureLoop (II)I
}

public final class arrow/benchmarks/effects/scala/zio/Pure$ {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/Pure$;
	public static final synthetic fun $anonfun$ioPureLoop$1 (II)Lzio/ZIO;
	public static final synthetic fun $anonfun$ioPureLoop$1$adapted (ILjava/lang/Object;)Lzio/ZIO;
	public static final synthetic fun $anonfun$unsafeIOPureLoop$1 (II)Lzio/ZIO;
	public static fun <clinit> ()V
	public fun ioPureLoop (II)Lzio/ZIO;
	public fun unsafeIOPureLoop (II)I
}

public final class arrow/benchmarks/effects/scala/zio/ZIORTS {
	public static fun as (Ljava/lang/Object;)Lzio/Runtime;
	public static fun const (Ljava/lang/Object;)Lzio/Runtime;
	public static fun environment ()Lzio/clock/Clock;
	public static fun map (Lscala/Function1;)Lzio/Runtime;
	public static fun mapPlatform (Lscala/Function1;)Lzio/Runtime;
	public static fun platform ()Lzio/internal/Platform;
	public static fun unsafeRun (Lscala/Function0;)Ljava/lang/Object;
	public static fun unsafeRunAsync (Lscala/Function0;Lscala/Function1;)V
	public static fun unsafeRunAsync_ (Lzio/ZIO;)V
	public static fun unsafeRunSync (Lscala/Function0;)Lzio/Exit;
	public static fun unsafeRunToFuture (Lzio/ZIO;)Lzio/CancelableFuture;
	public static fun withExecutor (Lzio/internal/Executor;)Lzio/Runtime;
	public static fun withFatal (Lscala/Function1;)Lzio/Runtime;
	public static fun withReportFailure (Lscala/Function1;)Lzio/Runtime;
	public static fun withReportFatal (Lscala/Function1;)Lzio/Runtime;
	public static fun withTracing (Lzio/internal/Tracing;)Lzio/Runtime;
	public static fun withTracingConfig (Lzio/internal/tracing/TracingConfig;)Lzio/Runtime;
}

public final class arrow/benchmarks/effects/scala/zio/ZIORTS$ : zio/DefaultRuntime {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/ZIORTS$;
	public static fun <clinit> ()V
	public final fun as (Ljava/lang/Object;)Lzio/Runtime;
	public final fun const (Ljava/lang/Object;)Lzio/Runtime;
	public synthetic fun environment ()Ljava/lang/Object;
	public fun environment ()Lzio/clock/Clock;
	public final fun map (Lscala/Function1;)Lzio/Runtime;
	public final fun mapPlatform (Lscala/Function1;)Lzio/Runtime;
	public fun platform ()Lzio/internal/Platform;
	public final fun unsafeRun (Lscala/Function0;)Ljava/lang/Object;
	public final fun unsafeRunAsync (Lscala/Function0;Lscala/Function1;)V
	public final fun unsafeRunAsync_ (Lzio/ZIO;)V
	public final fun unsafeRunSync (Lscala/Function0;)Lzio/Exit;
	public final fun unsafeRunToFuture (Lzio/ZIO;)Lzio/CancelableFuture;
	public final fun withExecutor (Lzio/internal/Executor;)Lzio/Runtime;
	public final fun withFatal (Lscala/Function1;)Lzio/Runtime;
	public final fun withReportFailure (Lscala/Function1;)Lzio/Runtime;
	public final fun withReportFatal (Lscala/Function1;)Lzio/Runtime;
	public final fun withTracing (Lzio/internal/Tracing;)Lzio/Runtime;
	public final fun withTracingConfig (Lzio/internal/tracing/TracingConfig;)Lzio/Runtime;
	public fun zio$DefaultRuntime$_setter_$environment_$eq (Lzio/clock/Clock;)V
	public fun zio$DefaultRuntime$_setter_$platform_$eq (Lzio/internal/Platform;)V
}

public final class arrow/benchmarks/effects/scala/zio/dummy {
	public static fun addSuppressed (Ljava/lang/Throwable;)V
	public static fun fillInStackTrace ()Ljava/lang/Throwable;
	public static fun getCause ()Ljava/lang/Throwable;
	public static fun getLocalizedMessage ()Ljava/lang/String;
	public static fun getMessage ()Ljava/lang/String;
	public static fun getStackTrace ()[Ljava/lang/StackTraceElement;
	public static fun getSuppressed ()[Ljava/lang/Throwable;
	public static fun initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;
	public static fun printStackTrace ()V
	public static fun printStackTrace (Ljava/io/PrintStream;)V
	public static fun printStackTrace (Ljava/io/PrintWriter;)V
	public static fun setStackTrace ([Ljava/lang/StackTraceElement;)V
	public static fun toString ()Ljava/lang/String;
}

public final class arrow/benchmarks/effects/scala/zio/dummy$ : java/lang/RuntimeException {
	public static final field MODULE$ Larrow/benchmarks/effects/scala/zio/dummy$;
	public static fun <clinit> ()V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
}

